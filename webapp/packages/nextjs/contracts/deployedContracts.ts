/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    LangDAO: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "PaymentProcessed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "duration",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalPaid",
              type: "uint256",
            },
          ],
          name: "SessionEnded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "sessionId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "student",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "tutor",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "language",
              type: "uint256",
            },
          ],
          name: "SessionStarted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "languages",
              type: "uint256[]",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ratePerHour",
              type: "uint256",
            },
          ],
          name: "TutorRegistered",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_ratePerHour",
              type: "uint256",
            },
          ],
          name: "convertToPerSecond",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sessionId",
              type: "uint256",
            },
          ],
          name: "emergencyEndSession",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "tutorAddress",
              type: "address",
            },
          ],
          name: "endSession",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_language",
              type: "string",
            },
          ],
          name: "getAvailableTutors",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sessionId",
              type: "uint256",
            },
          ],
          name: "getCurrentSessionCost",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_sessionId",
              type: "uint256",
            },
          ],
          name: "getSession",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "student",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "tutor",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "startTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "endTime",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "ratePerSecond",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalPaid",
                  type: "uint256",
                },
                {
                  internalType: "enum LangDAO.SessionStatus",
                  name: "status",
                  type: "uint8",
                },
                {
                  internalType: "uint256",
                  name: "language",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "isActive",
                  type: "bool",
                },
              ],
              internalType: "struct LangDAO.Session",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "getUserSessions",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_estimatedDuration",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_ratePerSecond",
              type: "uint256",
            },
          ],
          name: "hasSufficientBalance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "isNative",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "tutorAddress",
              type: "address",
            },
          ],
          name: "processPayment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "_languages",
              type: "uint256[]",
            },
            {
              internalType: "uint256",
              name: "_ratePerSecond",
              type: "uint256",
            },
          ],
          name: "registerTutor",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "sessionCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "sessions",
          outputs: [
            {
              internalType: "address",
              name: "student",
              type: "address",
            },
            {
              internalType: "address",
              name: "tutor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "ratePerSecond",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalPaid",
              type: "uint256",
            },
            {
              internalType: "enum LangDAO.SessionStatus",
              name: "status",
              type: "uint8",
            },
            {
              internalType: "uint256",
              name: "language",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_studentAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_language",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_token",
              type: "address",
            },
          ],
          name: "startSession",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSessions",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "tutors",
          outputs: [
            {
              internalType: "uint256",
              name: "ratePerSecond",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "totalEarnings",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "sessionCount",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "isRegistered",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_ratePerSecond",
              type: "uint256",
            },
          ],
          name: "updateRate",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "userSessions",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 1,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
